В данной лабораторной работе каждая задача выполняется в отдельном 
файле (т.е. для каждой задачи будут свои .cpp и .h).
В конце каждой задачи необходимо освободить выделенную память.
1. Выполните следующие задания (решения можно оформлять внутри функции main):
* создайте конструкцию, изображенную на рисунке;
* выведите число, указанное в квадратике, на экран;
* после этого удалите все динамические объекты.
2. Программа должна создать динамический массив из 7 случайных целых чисел из отрезка 
[0;9] и вывести его на экран на экран. Если в массиве чётных чисел оказалось больше, чем 
нечётных, то массив должен быть укорочен на 2 элемента с конца, иначе — на два 
элемента сначала. Итоговый массив выводится на экран.
Указание: укоротить массив — значит создать его измененную копию, не забыв удалить 
оригинал.
3. Задача на умножение матриц. Пользователь произвольно задает размерность двух матриц 
и заполняет значениями вручную. Не забывайте, что необходимо выделить 
соответствующие участки памяти для матриц, которые будет заполнять пользователь и для 
третьей итоговой матрицы. Далее отобразите на экране обе заполненные матрицы и 
итоговую матрицу (их воспроизведение).
4. Создать двумерный массив NхN, заполнить его случайными числами от 10 до 99 и вывести 
на экран. Поменять местами максимальный элемент каждой строки с первым элементом в 
соответствующей строке. Задачу решить с помощью указателей.
5. Написать функцию, приводящую к утечке памяти.
6. Создать 2 динамических массива (х1 и х2). Используя адресную арифметику изменить 
значения массива х2 при помощи указателя массива х1.
7. Изначально есть указатель на массив с одним элементом. Пользователь вводит число. 
Если оно больше 0 записываем его в массив. Далее пользователь вводит второе число, тут 
уже, если оно больше 0, надо пере выделять память для 2-х элементов массива и записать 
в массив второе число. И так далее… для 3-х элементов, для 4-х… пока пользователь не 
введет отрицательное число.